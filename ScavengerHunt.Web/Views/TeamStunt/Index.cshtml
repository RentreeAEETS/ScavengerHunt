@using ScavengerHunt.Web.Models
@using ScavengerHunt.Web.Resources
@model IEnumerable<ScavengerHunt.Web.Models.TeamStunt>

@{
    ViewBag.Title = "Index";
}

<h2>@Resources.Stunts</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Stunt.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Stunt.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Score)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Resources.Notes
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Where(x => x.Status != TeamStuntStatusEnum.Done))
    {
        <tr>
            <td>
                @if (ViewBag.settings.ShowKeyword)
                {
                    <kbd>@Html.DisplayFor(modelItem => item.Stunt.Keyword)</kbd>
                }
                @Html.DisplayFor(modelItem => item.Stunt.Title)<br />
                <span class="text-muted" style="font-size: smaller">@Html.Markdown(item.Stunt.Description)</span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stunt.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item, "Score")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TeamNotes, "Tooltip", new { Icon = "glyphicon-file"})
            </td>
            <td>
                @Html.ActionLink(Resources.Edit, "Edit", new { id = item.Id })
            </td>
        </tr>
    }
</table>

@if (Model.Any(x => x.Done))
{
    <h2>@Resources.Judged</h2>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Stunt.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stunt.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Score)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                Notes
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Where(x => x.Done))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Stunt.Title)<br /><span class="text-muted" style="font-size: smaller">
                        @Html.DisplayFor(modelItem => item.Stunt.Description)
                    </span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stunt.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item, "Score")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TeamNotes, "Tooltip", new { Text = "Team" })<br/>
                    @Html.DisplayFor(modelItem => item.JudgeFeedback, "Tooltip", new { Text = "Judge"})
                </td>
                <td>
                    @Html.ActionLink(Resources.Edit, "Edit", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
}

@section scripts
{
    <script type="text/javascript">       
        $("[data-toggle=tooltip").tooltip();
        $("[data-toggle=popover").popover();
    </script>
}